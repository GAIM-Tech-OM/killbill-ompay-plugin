/*
 * This file is generated by jOOQ.
 */
package org.killbill.billing.plugin.ompay.dao.gen.tables;


import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.killbill.billing.plugin.ompay.dao.gen.Indexes;
import org.killbill.billing.plugin.ompay.dao.gen.Keys;
import org.killbill.billing.plugin.ompay.dao.gen.Public;
import org.killbill.billing.plugin.ompay.dao.gen.tables.records.OmpayResponsesRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OmpayResponses extends TableImpl<OmpayResponsesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.ompay_responses</code>
     */
    public static final OmpayResponses OMPAY_RESPONSES = new OmpayResponses();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OmpayResponsesRecord> getRecordType() {
        return OmpayResponsesRecord.class;
    }

    /**
     * The column <code>public.ompay_responses.record_id</code>.
     */
    public final TableField<OmpayResponsesRecord, Integer> RECORD_ID = createField(DSL.name("record_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.ompay_responses.kb_account_id</code>.
     */
    public final TableField<OmpayResponsesRecord, String> KB_ACCOUNT_ID = createField(DSL.name("kb_account_id"), SQLDataType.CHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.ompay_responses.kb_payment_id</code>.
     */
    public final TableField<OmpayResponsesRecord, String> KB_PAYMENT_ID = createField(DSL.name("kb_payment_id"), SQLDataType.CHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.ompay_responses.kb_payment_transaction_id</code>.
     */
    public final TableField<OmpayResponsesRecord, String> KB_PAYMENT_TRANSACTION_ID = createField(DSL.name("kb_payment_transaction_id"), SQLDataType.CHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.ompay_responses.transaction_type</code>.
     */
    public final TableField<OmpayResponsesRecord, String> TRANSACTION_TYPE = createField(DSL.name("transaction_type"), SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>public.ompay_responses.amount</code>.
     */
    public final TableField<OmpayResponsesRecord, BigDecimal> AMOUNT = createField(DSL.name("amount"), SQLDataType.NUMERIC(15, 9), this, "");

    /**
     * The column <code>public.ompay_responses.currency</code>.
     */
    public final TableField<OmpayResponsesRecord, String> CURRENCY = createField(DSL.name("currency"), SQLDataType.CHAR(3), this, "");

    /**
     * The column <code>public.ompay_responses.ompay_transaction_id</code>.
     */
    public final TableField<OmpayResponsesRecord, String> OMPAY_TRANSACTION_ID = createField(DSL.name("ompay_transaction_id"), SQLDataType.VARCHAR(255).defaultValue(DSL.field("NULL::character varying", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.ompay_responses.ompay_reference_id</code>.
     */
    public final TableField<OmpayResponsesRecord, String> OMPAY_REFERENCE_ID = createField(DSL.name("ompay_reference_id"), SQLDataType.VARCHAR(255).defaultValue(DSL.field("NULL::character varying", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.ompay_responses.ompay_payer_id</code>.
     */
    public final TableField<OmpayResponsesRecord, String> OMPAY_PAYER_ID = createField(DSL.name("ompay_payer_id"), SQLDataType.VARCHAR(255).defaultValue(DSL.field("NULL::character varying", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.ompay_responses.ompay_card_id</code>.
     */
    public final TableField<OmpayResponsesRecord, String> OMPAY_CARD_ID = createField(DSL.name("ompay_card_id"), SQLDataType.VARCHAR(255).defaultValue(DSL.field("NULL::character varying", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.ompay_responses.redirect_url</code>.
     */
    public final TableField<OmpayResponsesRecord, String> REDIRECT_URL = createField(DSL.name("redirect_url"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.ompay_responses.authenticate_url</code>.
     */
    public final TableField<OmpayResponsesRecord, String> AUTHENTICATE_URL = createField(DSL.name("authenticate_url"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.ompay_responses.additional_data</code>.
     */
    public final TableField<OmpayResponsesRecord, String> ADDITIONAL_DATA = createField(DSL.name("additional_data"), SQLDataType.CLOB.defaultValue(DSL.field("NULL::text", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>public.ompay_responses.created_date</code>.
     */
    public final TableField<OmpayResponsesRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("created_date"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.ompay_responses.kb_tenant_id</code>.
     */
    public final TableField<OmpayResponsesRecord, String> KB_TENANT_ID = createField(DSL.name("kb_tenant_id"), SQLDataType.CHAR(36).nullable(false), this, "");

    private OmpayResponses(Name alias, Table<OmpayResponsesRecord> aliased) {
        this(alias, aliased, null);
    }

    private OmpayResponses(Name alias, Table<OmpayResponsesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.ompay_responses</code> table reference
     */
    public OmpayResponses(String alias) {
        this(DSL.name(alias), OMPAY_RESPONSES);
    }

    /**
     * Create an aliased <code>public.ompay_responses</code> table reference
     */
    public OmpayResponses(Name alias) {
        this(alias, OMPAY_RESPONSES);
    }

    /**
     * Create a <code>public.ompay_responses</code> table reference
     */
    public OmpayResponses() {
        this(DSL.name("ompay_responses"), null);
    }

    public <O extends Record> OmpayResponses(Table<O> child, ForeignKey<O, OmpayResponsesRecord> key) {
        super(child, key, OMPAY_RESPONSES);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.OMPAY_RESPONSES_KB_PAYMENT_ID, Indexes.OMPAY_RESPONSES_KB_PAYMENT_TRANSACTION_ID, Indexes.OMPAY_RESPONSES_OMPAY_REFERENCE_ID, Indexes.OMPAY_RESPONSES_OMPAY_TRANSACTION_ID);
    }

    @Override
    public Identity<OmpayResponsesRecord, Integer> getIdentity() {
        return (Identity<OmpayResponsesRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<OmpayResponsesRecord> getPrimaryKey() {
        return Keys.OMPAY_RESPONSES_PKEY;
    }

    @Override
    public OmpayResponses as(String alias) {
        return new OmpayResponses(DSL.name(alias), this);
    }

    @Override
    public OmpayResponses as(Name alias) {
        return new OmpayResponses(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OmpayResponses rename(String name) {
        return new OmpayResponses(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OmpayResponses rename(Name name) {
        return new OmpayResponses(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, String, String, String, String, BigDecimal, String, String, String, String, String, String, String, String, LocalDateTime, String> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
