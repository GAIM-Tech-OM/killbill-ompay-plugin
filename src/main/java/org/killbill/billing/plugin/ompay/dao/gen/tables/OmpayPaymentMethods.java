/*
 * This file is generated by jOOQ.
 */
package org.killbill.billing.plugin.ompay.dao.gen.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.killbill.billing.plugin.ompay.dao.gen.Indexes;
import org.killbill.billing.plugin.ompay.dao.gen.Keys;
import org.killbill.billing.plugin.ompay.dao.gen.Public;
import org.killbill.billing.plugin.ompay.dao.gen.tables.records.OmpayPaymentMethodsRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OmpayPaymentMethods extends TableImpl<OmpayPaymentMethodsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.ompay_payment_methods</code>
     */
    public static final OmpayPaymentMethods OMPAY_PAYMENT_METHODS = new OmpayPaymentMethods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OmpayPaymentMethodsRecord> getRecordType() {
        return OmpayPaymentMethodsRecord.class;
    }

    /**
     * The column <code>public.ompay_payment_methods.record_id</code>.
     */
    public final TableField<OmpayPaymentMethodsRecord, Integer> RECORD_ID = createField(DSL.name("record_id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.ompay_payment_methods.kb_account_id</code>.
     */
    public final TableField<OmpayPaymentMethodsRecord, String> KB_ACCOUNT_ID = createField(DSL.name("kb_account_id"), SQLDataType.CHAR(36).nullable(false), this, "");

    /**
     * The column
     * <code>public.ompay_payment_methods.kb_payment_method_id</code>.
     */
    public final TableField<OmpayPaymentMethodsRecord, String> KB_PAYMENT_METHOD_ID = createField(DSL.name("kb_payment_method_id"), SQLDataType.CHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.ompay_payment_methods.ompay_payer_id</code>.
     */
    public final TableField<OmpayPaymentMethodsRecord, String> OMPAY_PAYER_ID = createField(DSL.name("ompay_payer_id"), SQLDataType.VARCHAR(255).defaultValue(DSL.field("NULL::character varying", SQLDataType.VARCHAR)), this, "");

    /**
     * The column
     * <code>public.ompay_payment_methods.ompay_credit_card_id</code>.
     */
    public final TableField<OmpayPaymentMethodsRecord, String> OMPAY_CREDIT_CARD_ID = createField(DSL.name("ompay_credit_card_id"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.ompay_payment_methods.is_default</code>.
     */
    public final TableField<OmpayPaymentMethodsRecord, Short> IS_DEFAULT = createField(DSL.name("is_default"), SQLDataType.SMALLINT.nullable(false).defaultValue(DSL.field("0", SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>public.ompay_payment_methods.is_deleted</code>.
     */
    public final TableField<OmpayPaymentMethodsRecord, Short> IS_DELETED = createField(DSL.name("is_deleted"), SQLDataType.SMALLINT.nullable(false).defaultValue(DSL.field("0", SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>public.ompay_payment_methods.additional_data</code>.
     */
    public final TableField<OmpayPaymentMethodsRecord, String> ADDITIONAL_DATA = createField(DSL.name("additional_data"), SQLDataType.CLOB.defaultValue(DSL.field("NULL::text", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>public.ompay_payment_methods.created_date</code>.
     */
    public final TableField<OmpayPaymentMethodsRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("created_date"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.ompay_payment_methods.updated_date</code>.
     */
    public final TableField<OmpayPaymentMethodsRecord, LocalDateTime> UPDATED_DATE = createField(DSL.name("updated_date"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.ompay_payment_methods.kb_tenant_id</code>.
     */
    public final TableField<OmpayPaymentMethodsRecord, String> KB_TENANT_ID = createField(DSL.name("kb_tenant_id"), SQLDataType.CHAR(36).nullable(false), this, "");

    private OmpayPaymentMethods(Name alias, Table<OmpayPaymentMethodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private OmpayPaymentMethods(Name alias, Table<OmpayPaymentMethodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.ompay_payment_methods</code> table
     * reference
     */
    public OmpayPaymentMethods(String alias) {
        this(DSL.name(alias), OMPAY_PAYMENT_METHODS);
    }

    /**
     * Create an aliased <code>public.ompay_payment_methods</code> table
     * reference
     */
    public OmpayPaymentMethods(Name alias) {
        this(alias, OMPAY_PAYMENT_METHODS);
    }

    /**
     * Create a <code>public.ompay_payment_methods</code> table reference
     */
    public OmpayPaymentMethods() {
        this(DSL.name("ompay_payment_methods"), null);
    }

    public <O extends Record> OmpayPaymentMethods(Table<O> child, ForeignKey<O, OmpayPaymentMethodsRecord> key) {
        super(child, key, OMPAY_PAYMENT_METHODS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.OMPAY_PAYMENT_METHODS_KB_PAYMENT_METHOD_ID);
    }

    @Override
    public Identity<OmpayPaymentMethodsRecord, Integer> getIdentity() {
        return (Identity<OmpayPaymentMethodsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<OmpayPaymentMethodsRecord> getPrimaryKey() {
        return Keys.OMPAY_PAYMENT_METHODS_PKEY;
    }

    @Override
    public OmpayPaymentMethods as(String alias) {
        return new OmpayPaymentMethods(DSL.name(alias), this);
    }

    @Override
    public OmpayPaymentMethods as(Name alias) {
        return new OmpayPaymentMethods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OmpayPaymentMethods rename(String name) {
        return new OmpayPaymentMethods(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OmpayPaymentMethods rename(Name name) {
        return new OmpayPaymentMethods(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, String, String, String, Short, Short, String, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
